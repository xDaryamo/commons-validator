/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 04 16:18:29 GMT 2023
 */

package org.apache.commons.validator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;


public class FormSetEvoTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.addConstant("T2'Xd>", "T2'Xd>");
      formSet0.addConstant("T2'Xd>", "9gt:RXk0+} U");
      assertNull(formSet0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("]");
      String string0 = formSet0.getVariant();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      String string0 = formSet0.getVariant();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("GGy|");
      String string0 = formSet0.getLanguage();
      assertEquals("GGy|", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      String string0 = formSet0.getLanguage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      HashMap<String, Form> hashMap1 = new HashMap<String, Form>();
      form0.process(hashMap0, hashMap0, hashMap1);
      formSet0.addForm(form0);
      Form form1 = formSet0.getForm((String) null);
      assertNull(form1.getExtends());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      form0.setExtends("TT*A;Um[");
      formSet0.addForm(form0);
      Form form1 = formSet0.getForm((String) null);
      assertNull(form1.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("   ");
      String string0 = formSet0.getCountry();
      assertEquals("   ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      String string0 = formSet0.getCountry();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      LinkedList<Field> linkedList0 = new LinkedList<Field>();
      form0.lFields = (List<Field>) linkedList0;
      Field field0 = new Field();
      linkedList0.add(field0);
      // Undeclared exception!
      try { 
        formSet0.process((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.Field", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      // Undeclared exception!
      try { 
        formSet0.addForm((Form) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      String string0 = formSet0.getCountry();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      String string0 = formSet0.getVariant();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      String string0 = formSet0.getLanguage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      String string0 = formSet0.toString();
      assertEquals("FormSet: language=null  country=null  variant=null\n   Form: null\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("default");
      formSet0.setVariant("\n");
      String string0 = formSet0.displayKey();
      assertEquals("language=default, variant=\n", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("");
      String string0 = formSet0.displayKey();
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("\n");
      String string0 = formSet0.displayKey();
      assertEquals("variant=\n", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("default");
      formSet0.setCountry("\n");
      String string0 = formSet0.displayKey();
      assertEquals("language=default, country=\n", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("\n");
      String string0 = formSet0.displayKey();
      assertEquals("country=\n", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      String string0 = formSet0.displayKey();
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("");
      String string0 = formSet0.displayKey();
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      formSet0.process(hashMap0);
      assertTrue(formSet0.isProcessed());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      formSet0.process(hashMap0);
      boolean boolean0 = formSet0.isProcessed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      formSet0.addForm(form0);
      assertFalse(formSet0.isProcessed());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.addConstant((String) null, "\t\tindexedProperty = ");
      formSet0.addConstant((String) null, (String) null);
      assertNull(formSet0.getCountry());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      FormSet formSet1 = new FormSet();
      formSet0.addForm(form0);
      formSet1.merge(formSet0);
      assertNull(formSet0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = new Form();
      formSet0.addForm(form0);
      formSet0.merge(formSet0);
      assertNull(formSet0.getCountry());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.merge(formSet0);
      boolean boolean0 = formSet0.isMerged();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.merge((FormSet) null);
      assertNull(formSet0.getVariant());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("H");
      int int0 = formSet0.getType();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("s]%\"]fi|cB(gmA}$");
      formSet0.setLanguage("s]%\"]fi|cB(gmA}$");
      int int0 = formSet0.getType();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("s]%\"]fi|cB(gmA}$");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // When country is specified, language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setCountry("");
      formSet0.setLanguage("default");
      formSet0.setVariant("\n");
      int int0 = formSet0.getType();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      boolean boolean0 = formSet0.isProcessed();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setLanguage("default");
      formSet0.setVariant("\n");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // When variant is specified, country and language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      boolean boolean0 = formSet0.isMerged();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Form form0 = formSet0.getForm("m0");
      assertNull(form0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      int int0 = formSet0.getType();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      Map<String, Form> map0 = formSet0.getForms();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FormSet formSet0 = new FormSet();
      formSet0.setVariant("\n");
      // Undeclared exception!
      try { 
        formSet0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // When variant is specified, country and language must be specified.
         //
         verifyException("org.apache.commons.validator.FormSet", e);
      }
  }
}
