/*
 * This file was automatically generated by EvoSuite
 * Mon Sep 04 16:14:45 GMT 2023
 */

package org.apache.commons.validator.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;

import java.util.HashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import org.apache.commons.collections.FastHashMap;
import org.apache.commons.validator.Msg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.mockito.Mockito;

public class ValidatorUtilsEvoTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = "e";
      hashMap0.put("e", "e");
      String string1 = null;
      hashMap0.put((String) null, (Object) null);
      Map<String, Object> map0 = ValidatorUtils.copyMap(hashMap0);
      ValidatorUtils.copyMap(map0);
      Map<String, Object> map1 = ValidatorUtils.copyMap(map0);
      ValidatorUtils.copyMap(map1);
      FastHashMap fastHashMap0 = null;
      try {
        fastHashMap0 = new FastHashMap(994, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal load factor: 0.0
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ValidatorUtils.replace("QKfm]Z#JU0kt~Hs8k", "QKfm]Z#JU0kt~Hs8k", "QKfm]Z#JU0kt~Hs8k");
      assertEquals("QKfm]Z#JU0kt~Hs8k", string0);
      
      HashMap<String, Msg> hashMap0 = new HashMap<String, Msg>();
      Msg msg0 = new Msg();
      hashMap0.put("QKfm]Z#JU0kt~Hs8k", msg0);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      ValidatorUtils.copyMap(hashMap1);
      FastHashMap fastHashMap0 = new FastHashMap();
      ValidatorUtils.copyMap(fastHashMap0);
  }



  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValidatorUtils.replace((String) null, "S#\u0007", "S#\u0007");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValidatorUtils validatorUtils0 = new ValidatorUtils();
      ValidatorUtils.replace((String) null, (String) null, "Ogw7HT{Jx2@|x");
      FastHashMap fastHashMap0 = new FastHashMap(2124, 2124);
      BiFunction<Object, Msg, Msg> biFunction0 = Mockito.mock(BiFunction.class);
      fastHashMap0.replaceAll(biFunction0);
      ValidatorUtils.copyFastHashMap(fastHashMap0);
      Map<Msg, Msg> map0 = null;
      FastHashMap fastHashMap1 = null;
      try {
        fastHashMap1 = new FastHashMap((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }



  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValidatorUtils.replace("QKfm]Z#JU0kt~Hs8k", (String) null, "QKfm]Z#JU0kt~Hs8k");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ValidatorUtils.replace("", "org.apache.commons.validator.util.ValidatorUtils", "org.apache.commons.validator.util.ValidatorUtils");
      assertEquals("", string0);
  }



  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        ValidatorUtils.copyMap((Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.util.ValidatorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FastHashMap fastHashMap0 = new FastHashMap();
      Map<String, Object> map0 = ValidatorUtils.copyMap(fastHashMap0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FastHashMap fastHashMap0 = new FastHashMap(163, 1212.0F);
      Object object0 = new Object();
      BiConsumer<Msg, Msg> biConsumer0 = Mockito.mock(BiConsumer.class);
      fastHashMap0.put(object0, object0);
      fastHashMap0.forEach(biConsumer0);
      fastHashMap0.put(object0, object0);
      Msg msg0 = new Msg();
      FastHashMap fastHashMap1 = ValidatorUtils.copyFastHashMap(fastHashMap0);
      fastHashMap1.put((Object) null, (Object) null);
      fastHashMap0.putAll(fastHashMap1);
      msg0.setResource(true);
      msg0.setResource(true);
      msg0.setBundle("^ns");
      String string0 = "D";
      msg0.setName("D");
      msg0.setResource(true);
      fastHashMap0.put((Object) null, msg0);
      ValidatorUtils.copyFastHashMap(fastHashMap0);
      ValidatorUtils validatorUtils0 = new ValidatorUtils();
      ValidatorUtils.copyMap(fastHashMap0);
      // Undeclared exception!
      try { 
        ValidatorUtils.getValueAsString((Object) null, "D");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // org/apache/commons/beanutils/PropertyUtils
         //
      }
  }



  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = ValidatorUtils.replace("Gn%~zPtpq,w", "", (String) null);
      assertEquals("Gn%~zPtpq,w", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValidatorUtils validatorUtils0 = new ValidatorUtils();
      ValidatorUtils.replace("Vhz%<C", "Vhz%<C", "");
      // Undeclared exception!
      try { 
        ValidatorUtils.copyFastHashMap((FastHashMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.util.ValidatorUtils", e);
      }
  }



  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        ValidatorUtils.copyFastHashMap((FastHashMap) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.validator.util.ValidatorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FastHashMap fastHashMap0 = new FastHashMap(0);
      Object object0 = new Object();
      Object object1 = new Object();
      fastHashMap0.put(object0, object1);
      FastHashMap fastHashMap1 = ValidatorUtils.copyFastHashMap(fastHashMap0);
      assertTrue(fastHashMap1.getFast());
  }
}
